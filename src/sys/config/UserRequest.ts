/**
 * Array of predefined numbers used for generating the `fxTimestamp` value.
 */
const insible = [
  8, 37, 5, 89, 12, 56, 46, 14, 55, 28, 27, 7, 2, 12, 9, 14, 21, 23, 25, 34, 45,
];

/**
 * Contains various timestamp and random values for use in generating UUIDs or other purposes.
 */
export const userRequest = {
  /**
   * Current timestamp in ISO 8601 format.
   * Example: "2024-08-26T12:34:56.789Z"
   */
  currentTimestampIso: new Date().toISOString(),

  /**
   * Current timestamp in milliseconds since Unix epoch.
   * Example: 1693052096789
   */
  currentTimestamp: new Date().getTime(),

  /**
   * Current timestamp as a localized string based on the system's locale.
   * Example: "8/26/2024, 12:34:56 PM"
   */
  currentTimestampLocale: new Date().toLocaleString(),

  /**
   * Current timestamp in UTC format.
   * Example: "Sun, 26 Aug 2024 12:34:56 GMT"
   */
  currentTimestampUtc: new Date().toUTCString(),

  /**
   * Day of the month of the current date.
   * Example: 26
   */
  currentTimestampDate: new Date().getDate(),

  /**
   * Day of the week as a number (0 for Sunday, 1 for Monday, etc.).
   * Example: 0 (Sunday)
   */
  currentTimestampDay: new Date().getDay(),

  /**
   * Full year of the current date.
   * Example: 2024
   */
  currentTimestampFullYear: new Date().getFullYear(),

  /**
   * Current hour of the day (0-23).
   * Example: 12
   */
  currentTimestampHours: new Date().getHours(),

  /**
   * Current timestamp in hexadecimal format.
   * Example: "1f4e8a6c"
   */
  timestamp: new Date().getTime().toString(16),

  /**
   * A random part generated by converting a random number to hexadecimal format.
   * Example: "4a7f1e"
   */
  randomPart: Math.random().toString(16).substring(2),

  /**
   * A unique timestamp value multiplied by a random value from the `insible` array.
   * This creates a pseudo-random effect for the timestamp.
   * Example: 1693052096789 * 14
   */
  fxTimestamp:
    new Date().getTime() * insible[Math.floor(Math.random() * insible.length)],
};
